{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "# oe-message-handler\n`<oe-message-handler>` is an element for handling message/warning/error display using `<paper-toast>`.\nThe component can be placed anywhere on the main application page and all message display will be\nhandled automatically.\n\n```\n <oe-message-handler duration=\"2000\" persist-on=\"error\"></oe-message-handler>\n```\n\n## Show a toast\n\n### Within a polymer element\n```\nthis.fire('oe-show-message','Hello World!');\n```\n\n### From javascript\n```\n var event = new CustomEvent('oe-show-message', {detail: \"Hello World!\"});\n window.dispatchEvent(event);\n```\n\n## For warning and error messages\n```\n this.fire('oe-show-warning','This is a warning message!');\n this.fire('oe-show-error','Oh snap! something went terribly wrong');\n```\n\n## Toast that stays forever\n```\n this.fire('oe-show-message',{\n     message:'This message stays until the next toast',\n     forever:true\n });\n```\n\n## Toasts to be explicitly dismissed\n  When persist-on=\"error,warning\" is provided, all error and warning messages will persist and\nOK button must be pressed to dismiss the toast. An ok callback can be provided which is invoked\nwhen user presses OK.\n```\n this.fire('oe-show-error', {\n       message:'You must login before posting data.',\n     ok: goToLoginPage\n });\n```\n\n\n## i18n\nIf passed in message object has a `code` property, it is transformed for i18n. This means, you can pass the error-codes/message-codes as `msgData.code` and `oe-message-handler` will translate them into current language. When a translation is not found, `msgData.message` is displayed (if present), otherwise `msgData.code` (i.e. the error-code/message-code) is displayed as it is.\n```\nthis.fire('oe-show-error', {\n        code:'invalid-credentials',\n        message: 'Invalid Credentials'\n});\n```\n\nNow the `oe-message-handler` will look for a translation for 'invalid-credentials' and will display\nif it is found. If the translation is not defined then 'Invalid Credentials' will be displayed.\n\n## Confirmation window\n\nConfirmation toast, takes ok and cancel callbacks.\n```\n    this.fire('oe-show-confirm', {\n      message:'Record will be permanently removed. Are you sure?',\n        ok: okCallback,\n        cancel:cancelCallback\n    });\n```\n## Styling\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--oe-message-success-background` | The background color of the success | `#78ab46`\n`--oe-message-warning-background` | The background color of the warning | `#ffa000`\n`--oe-message-error-background`   | The background color of the error   | `#d32f2f`",
      "summary": "",
      "path": "oe-message-handler.js",
      "properties": [
        {
          "name": "duration",
          "type": "number | null | undefined",
          "description": "duration for the toast display",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "3000"
        },
        {
          "name": "fitBottom",
          "type": "boolean | null | undefined",
          "description": "fit entire screen width at bottom",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "persistOn",
          "type": "string | null | undefined",
          "description": "comma separated list of messaging events when the toast should persist and\r\nshould not auto hide after `duration`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "showToast",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 196,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showConfirmation",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_choiceMade",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeToast",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 254,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 2
            },
            "end": {
              "line": 273,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/demo-oe-message-handler.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 100,
          "column": 0
        },
        "end": {
          "line": 274,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OeMessageHandler",
      "attributes": [
        {
          "name": "duration",
          "description": "duration for the toast display",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 6
            },
            "end": {
              "line": 151,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "fit-bottom",
          "description": "fit entire screen width at bottom",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "persist-on",
          "description": "comma separated list of messaging events when the toast should persist and\r\nshould not auto hide after `duration`",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oe-message-handler",
      "mixins": [
        "OEFieldMixin"
      ]
    }
  ]
}
